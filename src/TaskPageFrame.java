
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author cheransankaran
 */
public class TaskPageFrame extends javax.swing.JFrame {

    /**
     * Creates new form TaskPageFrame
     */
    public TaskPageFrame() {
        initComponents();
    }
   
    Task task = readTaskFromFile("tempTask.txt");
    
    public static Task readTaskFromFile(String filePath) {
    Task task = null;

    try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
        String name = reader.readLine();
        int timeAllocated = Integer.parseInt(reader.readLine());
        String status = reader.readLine();
        LocalDate dueDate = LocalDate.parse(reader.readLine());
        String description = reader.readLine();

        // Create Task object
        task = new Task(name, timeAllocated, status, dueDate, description);

    } catch (IOException e) {
        e.printStackTrace();
    }

    return task;
}
    
    List<Task> taskList = readTasksFromFileArray("masterTaskList.txt");
        // Print the taskList
        
        public static List<Task> readTasksFromFileArray(String filePath) {
        List<Task> taskList = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;

            while ((line = reader.readLine()) != null) {
                String name = line;
                int timeAllocated = Integer.parseInt(reader.readLine());
                String status = reader.readLine();
                LocalDate dueDate = LocalDate.parse(reader.readLine());
                String description = reader.readLine();

                // Create Task object and add to the list
                Task task2 = new Task(name, timeAllocated, status, dueDate, description);
                taskList.add(task2);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        return taskList;
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblShowTaskName = new javax.swing.JLabel();
        btnMarkTaskComplete = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnStartTask = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblTaskName = new javax.swing.JLabel();
        txtError = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblDescriptionDisplay = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblShowTaskName.setText("Task Name: ");

        btnMarkTaskComplete.setText("Completed Task");
        btnMarkTaskComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkTaskCompleteActionPerformed(evt);
            }
        });

        btnExport.setText("Export");

        btnStartTask.setText("Start Task");
        btnStartTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartTaskActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblTaskName.setText("jLabel2");

        jLabel2.setText("Progress of task?:");

        jLabel3.setText("TASK PROGRESS ");

        lblDescriptionDisplay.setText("jLabel4");
        lblDescriptionDisplay.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblShowTaskName, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblTaskName)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel1)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnStartTask)
                                .addGap(197, 197, 197)
                                .addComponent(btnMarkTaskComplete))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(txtError, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(123, 123, 123)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                                .addComponent(btnExport))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(lblDescriptionDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, 89))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblShowTaskName)
                    .addComponent(jLabel1)
                    .addComponent(lblTaskName))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartTask)
                    .addComponent(btnMarkTaskComplete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(lblDescriptionDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnExport)
                    .addComponent(btnDelete))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        FileWriter myWriter = null;
      
        try {
            // TODO add your handling code here:
            myWriter = new FileWriter("masterTaskList.txt");
            myWriter.write("");
            for (int i = 0;i < taskList.size();i++){
                myWriter.write(taskList.get(i).toString());
                
                }   
                    TaskiListFrame myFrame1 = new TaskiListFrame();
                    myFrame1.show();
                    dispose();
            //FileWriter myWriter = new FileWriter("masterTaskList.txt");
        } catch (IOException ex) {
            Logger.getLogger(AddTaskFrame.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                myWriter.close();
            } catch (IOException ex) {
                Logger.getLogger(AddTaskFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnStartTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartTaskActionPerformed
       String nameToSearch = task.getName();
       task.setStatus("Started");
        deleteTaskByName(taskList, nameToSearch);
        taskList.add(task);
        txtError.setText("task marked as Started");
    }//GEN-LAST:event_btnStartTaskActionPerformed

    private void btnMarkTaskCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkTaskCompleteActionPerformed
        String nameToSearch = task.getName();
        deleteTaskByName(taskList, nameToSearch);
        task.setStatus("Completed");
        taskList.add(task);
        txtError.setText("task marked as Completed");
    }//GEN-LAST:event_btnMarkTaskCompleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        lblTaskName.setText(task.getName());
        lblDescriptionDisplay.setText(task.getDescription());
    }//GEN-LAST:event_formWindowOpened

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         String nameToSearch = task.getName();
         deleteTaskByName(taskList, nameToSearch);
         txtError.setText("Task Has Been Deleted");
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
   private static void deleteTaskByName(List<Task> taskList, String name) {
        Iterator<Task> iterator = taskList.iterator();

        while (iterator.hasNext()) {
            Task task = iterator.next();
            // Modify the condition to check against the 'name' property
            if (task.getName().equals(name)) {
                iterator.remove();
                break; // Optional: If you want to stop after deleting the first occurrence
            }
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskPageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TaskPageFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnMarkTaskComplete;
    private javax.swing.JButton btnStartTask;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblDescriptionDisplay;
    private javax.swing.JLabel lblShowTaskName;
    private javax.swing.JLabel lblTaskName;
    private javax.swing.JTextField txtError;
    // End of variables declaration//GEN-END:variables
}
